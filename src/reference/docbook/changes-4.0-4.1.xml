<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="migration-4.0-4.1"
    xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Changes between 4.0 and 4.1</title>
	<para>
		Please be sure to also see the
		<ulink url="https://github.com/spring-projects/spring-integration/wiki/Spring-Integration-4.0-to-4.1-Migration-Guide"
				>Migration Guide</ulink> for important changes that might affect your applications.
		Migration guides for all versions back to <emphasis>2.1</emphasis> can be found on the
		<ulink url="https://github.com/spring-projects/spring-integration/wiki">Wiki</ulink>.
	</para>
	<section>
		<title>New Components</title>
		<section id="4.1-promise-gateway">
			<title>Promise&lt;?&gt; Gateway</title>
			<para>
				A Reactor <classname>Promise</classname> return type is now supported for Messaging Gateway methods.
				See <xref linkend="async-gateway"/>.
			</para>
		</section>
		<section id="4.1-web-socket-adapters">
			<title>WebSocket support</title>
			<para>
				The <emphasis>WebSocket</emphasis> module is now available. It is fully based on the Spring WebSocket
				and Spring Messaging modules and provides an <code>&lt;inbound-channel-adapter&gt;</code> and an
				<code>&lt;outbound-channel-adapter&gt;</code>.
				See <xref linkend="web-sockets"/> for more information.
			</para>
		</section>
		<section id="4.1-scatter-gather">
			<title>Scatter-Gather EIP pattern</title>
			<para>
				The <emphasis>Scatter-Gather</emphasis> EIP pattern is now implemented.
				See <xref linkend="scatter-gather"/> for more information.
			</para>
		</section>
		<section id="4.1-Routing-Slip">
			<title>Routing Slip Pattern</title>
			<para>
				The <emphasis>Routing Slip</emphasis> EIP pattern implementation is now provided.
				See <xref linkend="routing-slip"/> for more information.
			</para>
		</section>
		<section id="4.1-idempotent-receiver">
			<title>Idempotent Receiver Pattern</title>
			<para>
				The <emphasis>Idempotent Receiver</emphasis> EIP implementation is now provided
				via the <code>&lt;idempotent-receiver&gt;</code> component in XML, or the
				<classname>IdempotentReceiverInterceptor</classname> and
				<interfacename>IdempotentReceiver</interfacename> annotation when using Java
				Configuration.
				See <xref linkend="idempotent-receiver"/> and their JavaDocs for more information.
			</para>
		</section>
		<section id="4.1-BoonJsonObjectMapper">
			<title>BoonJsonObjectMapper</title>
			<para>
				The <emphasis>Boon</emphasis> <interfacename>JsonObjectMapper</interfacename> is now provided
				for the JSON transformers. See <xref linkend="transformer"/> for more information.
			</para>
		</section>
		<section id="4.1-redis-queue-gateways">
			<title>Redis Queue Gateways</title>
			<para>
				The <code>&lt;redis-queue-inbound-gateway&gt;</code> and
				<code>&lt;redis-queue-outbound-gateway&gt;</code> components are now provided.
				See <xref linkend="redis-queue-inbound-gateway"/> and <xref linkend="redis-queue-outbound-gateway"/>.
			</para>
		</section>
		<section id="4.1-PollSkipAdvice">
			<title>PollSkipAdvice</title>
			<para>
				The <classname>PollSkipAdvice</classname> is now provided to be used within
				<code>&lt;advice-chain&gt;</code> of the <code>&lt;poller&gt;</code> to determine if the current
				<emphasis>poll</emphasis> should be suppressed (skipped) by some condition implemented with
				<interfacename>PollSkipStrategy</interfacename>.
				See <xref linkend="polling-consumer"/> for more information.
			</para>
		</section>
	</section>
	<section id="4.1-general">
		<title>General Changes</title>
		<section id="4.1-amqp-inbound-missing-queues">
			<title>AMQP Inbound Endpoints, Channel</title>
			<para>
				Elements that utilize a message listener container (inbound endpoints, channel)
				now support the <code>missing-queues-fatal</code> attribute.
				See <xref linkend="amqp"/> for more information.
			</para>
		</section>
		<section id="4.1-amqp-outbound-lazy-connect">
			<title>AMQP Outbound Endpoints</title>
			<para>
				The AMQP outbound endpoints support a new property <code>lazy-connect</code>
				(default true). When true, the connection to the broker is not established
				until the first message arrives (assuming there are no inbound endpoints, which
				always attempt to establish the connection during startup). When set the 'false' an
				attempt to establish the connection is made during application startup.
				See <xref linkend="amqp"/> for more information.
			</para>
		</section>
		<section id="4.1-sms-copy-on-get">
			<title>SimpleMessageStore</title>
			<para>
				The <classname>SimpleMessageStore</classname> no longer makes a copy of the group
				when calling <code>getMessageGroup()</code>.
				See <xref linkend="sms-caution"/> for more information.
			</para>
		</section>
		<section id="4.1-ws-encode-uri">
			<title>Web Service Outbound Gateway: encode-uri</title>
			<para>
				The <code>&lt;ws:outbound-gateway/&gt;</code> now
				provides an <code>encode-uri</code> attribute to allow disabling the encoding of the URI object
				before sending the request.
			</para>
		</section>
		<section id="4.1-http-status-code">
			<title>Http Inbound Channel Adapter and StatusCode</title>
			<para>
				The <code>&lt;http:inbound-channel-adapter&gt;</code> can now be configured with a
				<code>status-code-expression</code> to override the default <code>200 OK</code> status.
				See <xref linkend="http-namespace"/> for more information.
			</para>
		</section>
		<section id="4.1-mqtt">
			<title>MQTT Adapter Changes</title>
			<para>
				The MQTT channel adapters can now be configured to connect to multiple servers,
				for example, to support High Availability (HA).
				See <xref linkend="mqtt"/> for more information.
			</para>
			<para>
				The MQTT message-driven channel adapter now supports specifying the QoS setting for each
				subscription. See <xref linkend="mqtt-inbound"/> for more information.
			</para>
			<para>
				The MQTT outbound channel adapter now supports asynchronous sends, avoiding blocking
				until delivery is confirmed. See <xref linkend="mqtt-outbound"/> for more information.
			</para>
			<para>
				It is now possible to programmatically subscribe to and unsubscribe from topics at runtime.
				See <xref linkend="mqtt-inbound"/> for more information.
			</para>
		</section>
		<section id="4.1-sftp">
			<title>FTP/SFTP Adapter Changes</title>
			<para>
				The FTP and SFTP outbound channel adapters now support appending to remote files, as
				well as taking specific actions when a remote file already exists. The remote file
				templates now also support this as well as <code>rmdir()</code> and <code>exists()</code>.
				In addition, the remote file templates provide access to the underlying client object
				enabling access to low-level APIs.
			</para>
			<para>
				See <xref linkend="ftp"/> and <xref linkend="sftp"/> for more information.
			</para>
		</section>
		<section id="4.1-splitter-iterator">
			<title>Splitter and Iterator</title>
			<para>
				<code>Splitter</code> components now support an <classname>Iterator</classname> as the result object
				for producing output messages.
				See <xref linkend="splitter"/> for more information.
			</para>
		</section>
		<section id="4.1-aggregator">
			<title>Aggregator</title>
			<para>
				<code>Aggregator</code>s now support a new attribute <code>expire-groups-on-timeout</code>.
				See <xref linkend="aggregator-config"/> for more information.
			</para>
		</section>
		<section id="4.1-content-enricher-improvement">
			<title>Content Enricher Improvements</title>
			<para>
				An <code>null-result-expression</code> attribute has been added, which is evaluated and returned if
				<code>&lt;enricher&gt;</code> returns <code>null</code>.
				It can be added in <code>&lt;header&gt;</code> and <code>&lt;property&gt;</code>.
				See <xref linkend="content-enricher"/> for more information.
			</para>
			<para>
				An <code>error-channel</code> attribute has been added, which is used to handle an error flow
				if <classname>Exception</classname> occurs downstream of the <code>request-channel</code>. This enable
				you to return an alternative object to use for enrichment.
				See <xref linkend="content-enricher"/> for more information.
			</para>
		</section>
		<section id="4.1-header-channel-registry">
			<title>Header Channel Registry</title>
			<para>
				The <code>&lt;header-enricher/&gt;</code>'s <code>&lt;header-channels-to-string/&gt;</code>
				element can now override the header channel registry's default time for retaining channel
				mappings.
				See <xref linkend="header-channel-registry"/> for more information.
			</para>
		</section>
		<section id="4.1-orderly-shutdown">
			<title>Orderly Shutdown</title>
			<para>
				Improvements have been made to the orderly shutdown algorithm.
				See <xref linkend="jmx-shutdown"/> for more information.
			</para>
		</section>
		<section id="4.1-recipientListRouter">
			<title>Management for RecipientListRouter</title>
			<para>
				The <classname>RecipientListRouter</classname> provides now several <emphasis>management</emphasis>
				operations to configure <emphasis>recipients</emphasis> at runtime.
				With that the <code>&lt;recipient-list-router&gt;</code> can now be configured without any
				<code>&lt;recipient&gt;</code> from the start.
				See <xref linkend="recipient-list-router-management"/> for more information.
			</para>
		</section>
		<section id="4.1-AbstractHeaderMapper-changes">
			<title>AbstractHeaderMapper: NON_STANDARD_HEADERS token</title>
			<para>
				The <classname>AbstractHeaderMapper</classname> implementations now provides the additional
				<code>NON_STANDARD_HEADERS</code> token to map any user-defined headers, which aren't mapped by default.
				See <xref linkend="amqp-message-headers"/> for more information.
			</para>
		</section>
		<section id="4.1-amqp-channels">
			<title>AMQP Channels: template-channel-transacted</title>
			<para>
				The new <code>template-channel-transacted</code> attribute has been introduced for AMQP
				<classname>MessageChannel</classname>s.
				See <xref linkend="amqp-channels"/> for more information.
			</para>
		</section>
		<section id="4.1-syslog">
			<title>Syslog Adapter</title>
			<para>
				The default syslog message converter now has an option to retain the original message in
				the payload, while still setting the headers.
				See <xref linkend="syslog-inbound-adapter"/> for more information.
			</para>
		</section>
		<section id="4.1-async-gateway">
			<title>Async Gateway</title>
			<para>
				In addition to the <classname>Promise</classname> return type mentioned above,
				gateway methods may now return a <classname>ListenableFuture</classname>, introduced
				in Spring Framework 4.0. You can also disable the async processing in the gateway,
				allowing a downstream flow to directly return a <classname>Future</classname>.
				See <xref linkend="async-gateway"/>.
			</para>
		</section>
		<section id="4.1-aggregator-advice-chain">
			<title>Aggregator Advice Chain</title>
			<para>
				<code>Aggregator</code>s and <code>Resequencer</code>s now support an
				<code>&lt;expire-advice-chain/&gt;</code> and <code>&lt;expire-transactional/&gt;</code> sub-elements
				to <emphasis>advise</emphasis> the <code>forceComplete</code> operation.
				See <xref linkend="aggregator-config"/> for more information.
			</para>
		</section>
		<section id="4.1-script-outbound-channel-adapter">
			<title>Outbound Channel Adapter and Scripts</title>
			<para>
				The <code>&lt;int:outbound-channel-adapter/&gt;</code> now supports the <code>&lt;script/&gt;</code>
				sub-element. The underlying script must have a <code>void</code>
				return type or return <code>null</code>.
				See <xref linkend="groovy"/> and <xref linkend="scripting"/>.
			</para>
		</section>
		<section id="4.1-reseq">
			<title>Resequencer Changes</title>
			<para>
				When a message group in a resequencer is timed out (using <code>group-timeout</code> or a
				<classname>MessageGroupStoreReaper</classname>), late arriving messages will now be discarded
				immediately by default.
				See <xref linkend="resequencer"/>.
			</para>
		</section>
		<section id="4.1-Optional-Parameter">
			<title>Optional POJO method parameter</title>
			<para>
				Now Spring Integration consistently handles the Java 8's <classname>Optional</classname> type.
				See <xref linkend="service-activator-namespace"/>.
			</para>
		</section>
		<section id="4.1-queue-channel-queue.typ">
			<title>QueueChannel: backed Queue type</title>
			<para>
				The <classname>QueueChannel</classname> backed <classname>Queue type</classname> has been changed
				from <interfacename>BlockingQueue</interfacename> to the more generic
				<interfacename>Queue</interfacename>. It allows the use of any external
				<interfacename>Queue</interfacename> implementation, for example Reactor's
				<classname>PersistentQueue</classname>.
				See <xref linkend="channel-configuration-queuechannel"/>.
			</para>
		</section>
		<section id="4.1-channel-interceptor">
			<title>ChannelInterceptor Changes</title>
			<para>
				The <interfacename>ChannelInterceptor</interfacename> now supports additional
				<code>afterSendCompletion()</code> and <code>afterReceiveCompletion()</code> methods.
				See <xref linkend="channel-interceptors"/>.
			</para>
		</section>
		<section id="4.1-mail-peek">
			<title>IMAP PEEK</title>
			<para>
				Since <emphasis>version 4.1.1</emphasis> there is a change of behavior if you explicitly
				set the javamail property <code>mail.[protocol].peek</code> to <code>false</code>
				(where <code>[protocol]</code> is <code>imap</code> or <code>imaps</code>).
				See <xref linkend="imap-peek"/>.
			</para>
		</section>
	</section>
</section>
